
-- What SQL Queries we need?

/*
LOGIN:
1. Create users with given inputs. ( insert into users)
2. Get users with authentication inputs ( select for matching user and password)
3. Check if user is an admin. (check if user is admin)
4. Show the 10 most recent posts.
*/
--31Mar2020
Insert into Users ( UserName, ScreenName, Password )
Values ( UN, SN, PW );

------------------------------------------------------------
Select UserName, Password from Users 
	where UserName = VarUN
	and Password = CharPW;
	
-------------------------------------------------------------	
Select UserName from Admins 
where UserName= VarUN;

--------------------------------------------------------------
SELECT Message, Post.TimeS, ScreenName
FROM
	(
		 SELECT *
		 FROM Post
		 ORDER BY Post.TimeS DESC
		 LIMIT 10 
	) Post, Users

where UserName=Posted_By
ORDER BY Post.TimeS DESC;
-----------------------------------------------------------------	

--02Apr2020

--insert for friends:
INSERT INTO `Friends`(`User_1`, `User_2`) 
VALUES ([value-1],[value-2]);

--insert for best_friends:
INSERT INTO `Best_Friends`(`User_UserName`, `Friend_UserName`) 
VALUES ([value-1],[value-2]);

--insert for best_friend_request:
INSERT INTO `Best_Friend_Request`( `BFR_F_ID`, `Requestee`) 
VALUES ([value-1],[value-2]);

--select for requests and making sure they are friends
select user_1, user_2"User1'sFriend" from Best_Friend_Request, Friends
where bfr_f_id= f_id;

--insert for post
INSERT INTO `Post`(`Message`,`Posted_By`) 
VALUES[value-1],[value-2]);


SELECT Message, Post.TimeS, ScreenName
FROM
    (
         SELECT *
         FROM Post
         ORDER BY TimeS DESC
         LIMIT 10 
    ) Post, Users

where UserName=Posted_By
ORDER BY Post.TimeS DESC;
-------------------------------------------------------------

--14-Apr-2020

--Worked on selecting a post when a user has already logged in.
--Working on a user being able to make a post or comment on another post.
--Allow User to view profile
	--1.friends
	--2. profile info...
	
--need to be able to select comments once we display a post.

INSERT INTO `Comments`(`Commented_By`, `Post_ID`, `Content`, `TimeS`) 
VALUES ('ChrisTest',5,'This is a good post.','2020-04-14 15:54:00')

select Commented_By, Content, Comments.TimeS from Comments, Post 
where Comments.Post_ID= Post.Post_ID
and Comments.Post_ID= 5;

--only want to show most recent 10 comments.

SELECT comment_id, Commented_By, content, Comments.TimeS 
FROM Comments 
WHERE Comments.Post_ID = 12 ORDER BY Comments.TimeS DESC LIMIT 10 

-----------------------------------------------------------------------
--18-Apr-2020

--inserts for post likes, comments likes, friends, friend_request
--deletes posts, deletes comments

INSERT INTO `Post_Like`(`Liked_By`, `Post_ID`, `TimeS`) VALUES ('ChrisTest',7 ,CURRENT_TIMESTAMP);

INSERT INTO `Comment_Like`(`Liked_By`, `Comment_ID`, `TimeS`) VALUES ('ChrisTest',7 ,CURRENT_TIMESTAMP);

INSERT INTO `Friends`(`User_1`, `User_2`, `TimeS`) VALUES ('ChrisTeset','Merthew',CURRENT_TIMESTAMP);

INSERT INTO `Best_Friends`(`User_UserName`, `Friend_UserName`, `TimeS`) VALUES ('ChrisTest','Merthew',CURRENT_TIMESTAMP);

INSERT INTO `Best_Friend_Request`(`BFR_F_ID`, `TimeS`, `Requestee`) VALUES (1,CURRENT_TIMESTAMP,'Merthew');

DELETE FROM `Post` WHERE Post_ID= 2;

DELETE FROM `Comments` WHERE Comment_id= 2;

DELETE FROM `Post_Like` WHERE pl_id= 1 and post_id= 1;

DELETE FROM `Comment_Like` WHERE cl_id= 1 and Comment_ID= 1;

-----------------------------------------------------------------------
--23-Apr-2020

--Need to make profile show username, screename, current date/time, bestfriend, and No_post created.

select Users.ScreenName, Friend_UserName, User_UserName , Count(Posted_By) as No_Of_Posts_Created
from Users left join Best_Friends on Users.UserName= Best_Friends.User_UserName
JOIN Post on Users.UserName = Post.Posted_By
where Users.UserName= 'ChrisTest'
group by Users.UserName, Users.ScreenName, Friend_UserName;

--Need to be able to go back, view posts made by the user, go to bestfriend's profile, view their posts, change screename, logout.

--need to view friends
select User_1, User_2 from Friends;

select User_2 from Friends
where User_1= UserName;

--posts for a given user.
select Post_ID, Message,TimeS from Post
where Posted_By= User;

DELETE FROM Friends WHERE User_1= 
and User_2=;

-----------------------------------------------------------------------
--24-Apr-2020

--update screename
update Users
set ScreenName= 
where UserName=
;

